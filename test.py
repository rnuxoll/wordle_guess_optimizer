from main import *


def test_return_possibilities():
    initial_set = get_five_letter_words()

    # todo the current problem in the code is with this loop that gets the current set
    # rails
    #
    # Would meet the feedback
    #
    # [r, [0, 1, 3, 4]]
    # [r, [0, 1, 2, 4]]
    #
    # Which is generated by a a word like “carry”
    # todo I think match in position should take the same feedback, and keep in mind whether it has matched an instance
    # todo of the same letter already
    # todo which means tracking a new variable that tracks all letters matched already

    # todo we could alternatively take the set intersection of these two feedback and then indicate the minimum instances
    # where the minimum instances = the number of sets we have taken the intersection of
    # todo this would not work for cases where we know that one of the letters is in a specific position, because that
    # todo information is lost when we take the set intersection
    example_feedback_1 = [
        ['r', [0, 1, 3, 4]],
        ['r', [0, 1, 2, 4]]
        ]

    new_set = return_possibilities(example_feedback_1, initial_set)
    print(new_set)

    # look at this interesting feedback case and make sure it handles it
    # possibility=  tenon
    # guess=  penna
    # [['p', []], ['e', [1]], ['n', [2]], ['n', [0, 1, 2, 3, 4]], ['a', []]]

    for feedback in example_feedback_1:
        pass

    pass


if __name__ == '__main__':
    print("testing return possibilities.....")
    test_return_possibilities()